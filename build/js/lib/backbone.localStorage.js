!function(e,t){"object"==typeof exports&&"function"==typeof require?module.exports=t(require("backbone")):"function"==typeof define&&define.amd?define(["backbone"],function(r){return t(r||e.Backbone)}):t(Backbone)}(this,function(e){function t(){return(65536*(1+Math.random())|0).toString(16).substring(1)}function r(){return t()+t()+"-"+t()+"-"+t()+"-"+t()+"-"+t()+t()+t()}function i(e){return e===Object(e)}function o(e,t){for(var r=e.length;r--;)if(e[r]===t)return!0;return!1}function n(e,t){for(var r in t)e[r]=t[r];return e}function a(e,t){if(null==e)return void 0;var r=e[t];return"function"==typeof r?e[t]():r}return e.LocalStorage=window.Store=function(e,t){if(!this.localStorage)throw"Backbone.localStorage: Environment does not support localStorage.";this.name=e,this.serializer=t||{serialize:function(e){return i(e)?JSON.stringify(e):e},deserialize:function(e){return e&&JSON.parse(e)}};var r=this.localStorage().getItem(this.name);this.records=r&&r.split(",")||[]},n(e.LocalStorage.prototype,{save:function(){this.localStorage().setItem(this.name,this.records.join(","))},create:function(e){return e.id||0===e.id||(e.id=r(),e.set(e.idAttribute,e.id)),this.localStorage().setItem(this._itemName(e.id),this.serializer.serialize(e)),this.records.push(e.id.toString()),this.save(),this.find(e)},update:function(e){this.localStorage().setItem(this._itemName(e.id),this.serializer.serialize(e));var t=e.id.toString();return o(this.records,t)||(this.records.push(t),this.save()),this.find(e)},find:function(e){return this.serializer.deserialize(this.localStorage().getItem(this._itemName(e.id)))},findAll:function(){for(var e,t,r=[],i=0;i<this.records.length;i++)e=this.records[i],t=this.serializer.deserialize(this.localStorage().getItem(this._itemName(e))),null!=t&&r.push(t);return r},destroy:function(e){this.localStorage().removeItem(this._itemName(e.id));for(var t=e.id.toString(),r=0;r<this.records.length;r++)this.records[r]===t&&this.records.splice(r,1);return this.save(),e},localStorage:function(){return localStorage},_clear:function(){var e=this.localStorage(),t=new RegExp("^"+this.name+"-");e.removeItem(this.name);for(var r in e)t.test(r)&&e.removeItem(r);this.records.length=0},_storageSize:function(){return this.localStorage().length},_itemName:function(e){return this.name+"-"+e}}),e.LocalStorage.sync=window.Store.sync=e.localSync=function(t,r,i){var o,n,s=a(r,"localStorage")||a(r.collection,"localStorage"),c=e.$?e.$.Deferred&&e.$.Deferred():e.Deferred&&e.Deferred();try{switch(t){case"read":o=void 0!=r.id?s.find(r):s.findAll();break;case"create":o=s.create(r);break;case"update":o=s.update(r);break;case"delete":o=s.destroy(r)}}catch(l){n=22===l.code&&0===s._storageSize()?"Private browsing is unsupported":l.message}return o?(i&&i.success&&("0.9.10"===e.VERSION?i.success(r,o,i):i.success(o)),c&&c.resolve(o)):(n=n?n:"Record Not Found",i&&i.error&&("0.9.10"===e.VERSION?i.error(r,n,i):i.error(n)),c&&c.reject(n)),i&&i.complete&&i.complete(o),c&&c.promise()},e.ajaxSync=e.sync,e.getSyncMethod=function(t,r){var i=r&&r.ajaxSync;return i||!a(t,"localStorage")&&!a(t.collection,"localStorage")?e.ajaxSync:e.localSync},e.sync=function(t,r,i){return e.getSyncMethod(r,i).apply(this,[t,r,i])},e.LocalStorage});
//# sourceMappingURL=data:application/json;base64,
